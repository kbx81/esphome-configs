substitutions:
  node_name: esp-sensor-toy-with-display
  node_friendly_name: Sensor Toy with Display
  project_name: TempHumSensWithESP01
  project_version: v3

packages:
  esp_common: !include shared/esp__common_core.yaml

esp32:
  board: esp32-c3-devkitm-1

logger:
  hardware_uart: UART0

status_led:
  pin: 3

time:
  - platform: homeassistant
    id: esptime

i2c:
  id: i2c_bus
  frequency: 200kHz
  sda: 2
  scl: 9

font:
  - file: resources/Roboto/Roboto-Regular.ttf
    id: thermostat_xlarge
    size: 60
  # - file: resources/Roboto/Roboto-Regular.ttf
  #   id: thermostat_large
  #   size: 24
  - file: resources/Roboto/Roboto-Regular.ttf
    id: thermostat_medium
    size: 13
  - file: resources/Roboto/Roboto-Regular.ttf
    id: thermostat_small
    size: 12
  # - file: resources/Roboto/Roboto-Regular.ttf
  #   id: thermostat_tiny
  #   size: 9

# BME680 BSEC2 sensor
bme68x_bsec2_i2c:
  address: 0x76
  model: bme680
  operating_age: 28d
  sample_rate: LP
  supply_voltage: 3.3V

sensor:
  # DHT22 sensor
  - platform: dht
    pin: 20
    model: DHT22
    temperature:
      id: esp_sensor_dht22_temperature
      name: DHT22 Temperature
    humidity:
      id: esp_sensor_dht22_humidity
      name: DHT22 Humidity
    update_interval: 15s
  # BME680 BSEC2 sensor
  - platform: bme68x_bsec2
    temperature:
      id: esp_sensor_bme680_temperature
      name: BME680 Temperature
      filters:
        - median
        - offset: -0.8
    humidity:
      id: esp_sensor_bme680_humidity
      name: BME680 Humidity
    pressure:
      id: esp_sensor_bme680_pressure
      name: BME680 Pressure
    gas_resistance:
      id: esp_sensor_bme680_gas_resistance
      name: BME680 Gas Resistance
    iaq:
      id: esp_sensor_bme680_iaq
      name: BME680 IAQ
    co2_equivalent:
      id: esp_sensor_bme680_eco2
      name: BME680 eCO2
    breath_voc_equivalent:
      id: esp_sensor_bme680_evoc
      name: BME680 Breath eVOC
  # SHTC3 sensor
  - platform: shtcx
    temperature:
      id: esp_sensor_shtcx_temperature
      name: SHTC3 Temperature
      filters:
        - offset: -1.5
    humidity:
      id: esp_sensor_shtcx_humidity
      name: SHTC3 Humidity
    update_interval: 15s
  # SGP40 sensor
  - platform: sgp4x
    voc:
      id: esp_sensor_sgp40_voc
      name: SGP40 VOC Index
    update_interval: 15s
    compensation:
      humidity_source: esp_sensor_shtcx_humidity
      temperature_source: esp_sensor_shtcx_temperature

text_sensor:
  - platform: bme68x_bsec2
    iaq_accuracy:
      id: esp_sensor_bme680_accuracy
      name: BME680 Accuracy

switch:
  # display control
  - platform: template
    id: esp_display
    name: Display
    turn_on_action:
      - lambda: "id(main_lcd)->turn_on();"
    turn_off_action:
      - lambda: "id(main_lcd)->turn_off();"
    lambda: "return id(main_lcd)->is_on();"

number:
  - platform: template
    id: esp_display_contrast
    name: Display Contrast
    optimistic: true
    min_value: 0
    max_value: 1
    step: 0.01
    initial_value: 0.5
    restore_value: true
    on_value:
      then:
        - lambda: "id(main_lcd)->set_contrast(x);"

display:
  - platform: ssd1306_i2c
    model: "SH1106 128x64"
    id: main_lcd
    contrast: 10%
    # rotation: 180
    update_interval: 5s
    pages:
      - id: page1
        lambda: |-
          if (!isnan(id(esp_sensor_bme680_iaq).state)) {
            it.printf(it.get_width() / 2, it.get_height() / 2, id(thermostat_xlarge), TextAlign::CENTER, "%.0f", id(esp_sensor_bme680_iaq).state);
          } else {
            it.printf(it.get_width() / 2, it.get_height() / 2, id(thermostat_xlarge), TextAlign::CENTER, "--");
          }
      - id: page2
        lambda: |-
          it.strftime(0, 0, id(thermostat_small), TextAlign::TOP_LEFT, "%Y-%m-%d", id(esptime).now());
          it.strftime(it.get_width() - 1, 0, id(thermostat_small), TextAlign::TOP_RIGHT, "%H:%M:%S", id(esptime).now());

          if (!isnan(id(esp_sensor_bme680_temperature).state)) {
            it.printf(0, it.get_height() - 45, id(thermostat_medium), TextAlign::TOP_LEFT, "Temperature:");
            it.printf(0, it.get_height() - 30, id(thermostat_medium), TextAlign::TOP_LEFT, "Humidity:");
            it.printf(0, it.get_height() - 15, id(thermostat_medium), TextAlign::TOP_LEFT, "Pressure:");

            it.printf(it.get_width() - 1, it.get_height() - 45, id(thermostat_medium), TextAlign::TOP_RIGHT, "%.1fÂ°F", id(esp_sensor_bme680_temperature).state * 1.8 + 32);
            it.printf(it.get_width() - 1, it.get_height() - 30, id(thermostat_medium), TextAlign::TOP_RIGHT, "%.1f%%", id(esp_sensor_bme680_humidity).state);
            it.printf(it.get_width() - 1, it.get_height() - 15, id(thermostat_medium), TextAlign::TOP_RIGHT, "%.1f hPa", id(esp_sensor_bme680_pressure).state);
          }
