substitutions:
  node_name: esp-thermostat-front-room
  node_friendly_name: "Front Room Thermostat"
  home_page_name: "weather"
  rooms_page_name: "rooms"
  sensors_page_name: "sensors"
  weather_page_name: "weather"
  # air quality entity name
  air_quality_entity: "sensor.aqi_wh41"
  # weather entity name
  weather_entity: "weather.home_fairfield"
  # temperature sensor offsets
  ntc_reference_voltage: "0.92V"
  ntc_temperature_offset: "0.0"
  dht22_temperature_offset: "-2.0"
  bme280_temperature_offset: "-1.6"
  bme680_temperature_offset: "-2.0"
  shtc3_temperature_offset: "-2.1"
  tmp117_temperature_offset: "-2.4"

packages:
  esp_common: !include shared/esp__common_core.yaml
  esp_thermostat_common: !include shared/esp_thermostat_nextion_common_config.yaml
  esp_thermostat_common_controller: !include shared/esp_thermostat_common_satellite_config.yaml

esp32:
  flash_size: 8MB

# BME680 BSEC sensor
bme680_bsec:
  address: 0x77

sensor:
  # HA sensors we track - humidity
  - platform: homeassistant
    id: room_bedroom_humidity_ha
    entity_id: sensor.bedroom_thermostat_bme680_humidity
    on_value:
      then:
        - lambda: "id(nextionRoom2Hum).set_state(roundf(x * 10), false, true);"
  - platform: homeassistant
    id: room_nook_humidity_ha
    entity_id: sensor.nook_thermostat_bme680_humidity
    on_value:
      then:
        - lambda: "id(nextionRoom3Hum).set_state(roundf(x * 10), false, true);"
  - platform: homeassistant
    id: room_bathroom_humidity_ha
    entity_id: sensor.bathroom_thermostat_bme680_humidity
    on_value:
      then:
        - lambda: "id(nextionRoom4Hum).set_state(roundf(x * 10), false, true);"
  - platform: homeassistant
    id: room_boiler_humidity_ha
    entity_id: sensor.boiler_room_bme680_humidity
    on_value:
      then:
        - lambda: "id(nextionRoom5Hum).set_state(roundf(x * 10), false, true);"
  - platform: homeassistant
    id: room_garage_humidity_ha
    entity_id: sensor.garage_sensor_humidity
    on_value:
      then:
        - lambda: "id(nextionRoom6Hum).set_state(roundf(x * 10), false, true);"
  # HA sensors we track - temperature
  - platform: homeassistant
    id: room_bedroom_temperature_ha
    entity_id: sensor.bedroom_thermostat_bme680_temperature
    on_value:
      then:
        - lambda: "id(nextionRoom2Temp).set_state(roundf(x * 10), false, true);"
  - platform: homeassistant
    id: room_nook_temperature_ha
    entity_id: sensor.nook_thermostat_bme680_temperature
    on_value:
      then:
        - lambda: "id(nextionRoom3Temp).set_state(roundf(x * 10), false, true);"
  - platform: homeassistant
    id: room_bathroom_temperature_ha
    entity_id: sensor.bathroom_thermostat_bme680_temperature
    on_value:
      then:
        - lambda: "id(nextionRoom4Temp).set_state(roundf(x * 10), false, true);"
  - platform: homeassistant
    id: room_boiler_temperature_ha
    entity_id: sensor.boiler_room_bme680_temperature
    on_value:
      then:
        - lambda: "id(nextionRoom5Temp).set_state(roundf(x * 10), false, true);"
  - platform: homeassistant
    id: room_garage_temperature_ha
    entity_id: sensor.garage_sensor_temperature
    on_value:
      then:
        - lambda: "id(nextionRoom6Temp).set_state(roundf(x * 10), false, true);"
  # DHT22 sensor
  - platform: dht
    pin: 23
    model: AM2302
    temperature:
      id: esp_thermostat_dht22_temperature
      name: DHT22 Temperature
      filters:
        - offset: ${dht22_temperature_offset}
      on_value:
        then:
          - lambda: |-
              auto temperature_string = str_sprintf("%.1f", celsius_to_fahrenheit(id(esp_thermostat_dht22_temperature).state)) + "\xB0";
              id(nextionTextSensor5a).set_state(temperature_string, false, true);
    humidity:
      id: esp_thermostat_dht22_humidity
      name: DHT22 Humidity
      accuracy_decimals: 1
      on_value:
        then:
          - lambda: |-
              auto humidity_string = str_sprintf("%.1f", id(esp_thermostat_dht22_humidity).state) + "%";
              id(nextionTextSensor5b).set_state(humidity_string, false, true);
    update_interval: 15s

display:
  - platform: nextion
    id: main_lcd
    uart_id: nextion_uart
    update_interval: 15s
    tft_url: http://10.100.0.81/download/public/climate/v2/NX8048P070-011C.tft
    lambda: |-
      auto dateTime = id(esptime).now();
      // update the Nextion's clock once per hour (and at start-up)
      if (id(display_last_full_refresh) != dateTime.hour) {
        id(display_last_full_refresh) = dateTime.hour;
        main_lcd->set_nextion_rtc_time(dateTime);
      }
    on_setup:
      then:
        - script.execute: refresh_display_status_string
        - script.execute: refresh_display_climate_mode
        - script.execute: refresh_display_climate_fan_mode
        - script.execute: refresh_display_set_points
        - lambda: |-
            main_lcd->goto_page("weather");

            id(nextionTextRoom1).set_state("Local:", false, true);
            id(nextionTextRoom2).set_state("Bedroom:", false, true);
            id(nextionTextRoom3).set_state("Nook:", false, true);
            id(nextionTextRoom4).set_state("Bathroom:", false, true);
            id(nextionTextRoom5).set_state("Boiler Room:", false, true);
            id(nextionTextRoom6).set_state("Garage:", false, true);

            id(nextionTextSensor1).set_state("BME680:", false, true);
            id(nextionTextSensor2).set_state("BME280:", false, true);
            id(nextionTextSensor3).set_state("SHTC3:", false, true);
            id(nextionTextSensor4).set_state("TMP117:", false, true);
            id(nextionTextSensor5).set_state("DHT22:", false, true);
            id(nextionTextSensor6).set_state("Thermistor 1:", false, true);
            id(nextionTextSensor7).set_state("Thermistor 2:", false, true);
            id(nextionTextSensor8).set_state("SGP40:", false, true);